var e=Object.defineProperty,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,n=(l,t,a)=>t in l?e(l,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):l[t]=a,r=(e,r)=>{for(var c in r||(r={}))t.call(r,c)&&n(e,c,r[c]);if(l)for(var c of l(r))a.call(r,c)&&n(e,c,r[c]);return e};import{f as c,J as u,q as o,r as i,R as s,v as m,a as p}from"./vendor.02ad2195.js";const d={capsule:"capsule_184x69.jpg",header:"header.jpg",library:"library_600x900.jpg"},b={"capsule-fallback":["capsule"],"header-fallback":["header","capsule"],"library-fallback":["library","header","capsule"]},h={capsule:"1. 一番小さい 横長",header:"2. 少し大きめ 横長",library:"3. 大きめ 縦長","capsule-fallback":"1. 一番小さい 横長","library-fallback":"3 → 2 → 1 の順で画像があるものを使う","header-fallback":"2 → 1 の順で画像があるものを使う"};const f=e=>e.endsWith("-fallback"),g=async(e,l)=>b[l].reduce((async(l,t)=>await l||await E(e,t)),Promise.resolve(null)),E=(e,l)=>fetch(y(e,l)).then((e=>e.blob())).then((e=>({blob:e,type:l}))).catch((()=>null)),y=(e,l)=>`https://cdn.akamai.steamstatic.com/steam/apps/${e}/${d[l]}`,v=async(e,l="capsule",t)=>{const a=e.length;let n=0;const c={image:0,zip:0},o=[],i=[],s=e.map((async({appid:e,name:u})=>{var s;const m=await function(e,l){return f(l)?g(e,l):E(e,l)}(e,l),p=S(`${u}.jpg`),d=l.replace(/-fallback$/,"");const b=null!=(s=null==m?void 0:m.type)?s:null;let h;if(m?(o.push({appid:e,name:u,filename:p,image:m}),h=d===m.type?null:"FALLBACK_FOUND"):h="ALL_NOT_FOUND",h){const l=(e=>({capsule:y(e,"capsule"),header:y(e,"header"),library:y(e,"library")}))(e);i.push({failType:h,appid:e,name:u,filename:p,actualType:b,expectedType:d,allImageUrls:l})}c.image=++n/a*100,null==t||t(r({},c))}));await Promise.all(s);const m=new u;o.forEach((({filename:e,image:l})=>{m.file(e,l.blob,{binary:!0})}));const p=await m.generateAsync({type:"blob"},(({percent:e})=>{c.zip=e,null==t||t(r({},c))}));return i.sort((({failType:e},{failType:l})=>e===l?0:"ALL_NOT_FOUND"===e?-1:"ALL_NOT_FOUND"===l?1:0)),{zipBlob:p,fails:i}},S=e=>c(e,{replacement:"_"}).replace(/_+/g,"_");function k(e){const{parse:l,stringify:t}=e;return function({onData:e,defaultValue:a}){const n=i.exports.useMemo((()=>{try{return a?t(a):void 0}catch(e){return}}),[]);return s.createElement(O,{defaultValue:n,onChange:t=>{try{const a=l(t.currentTarget.value);a&&e(a)}catch(a){}}})}}const O=o.textarea`
  display: block;
  width: 500px;
  height: 200px;
`;function w(e,l){const t=i.exports.useState((()=>{const t=x(localStorage.getItem(e));return t||(l instanceof Function?l():l)})),[a]=t;return i.exports.useEffect((()=>{localStorage.setItem(e,JSON.stringify(a))}),[a]),t}const x=e=>{if(e)try{return JSON.parse(e)}catch(l){}return null};function C({fetchMode:e,games:l,zipFilename:t}){const[a,n]=i.exports.useState([]),[r,c]=i.exports.useState({image:0,zip:0}),[u,o]=i.exports.useState(!1),[m,p]=i.exports.useState(null),d=0===l.length||u,b=!m||u;return s.createElement("div",null,s.createElement(T,{disabled:d,onClick:()=>{o(!0),v(l,e,c).then((({zipBlob:e,fails:l})=>{p(e),n(l)})).then((()=>o(!1))).catch((()=>o(!1)))},children:"Generate"}),s.createElement(T,{disabled:b,onClick:()=>{o(!0),((e,l)=>{const t=document.createElement("a"),a=URL.createObjectURL(e);return t.href=a,t.download=S(l),document.body.appendChild(t),t.click(),new Promise((e=>{setTimeout((function(){document.body.removeChild(t),window.URL.revokeObjectURL(a),e()}),0)}))})(m,t).then((()=>o(!1))).catch((()=>o(!1)))},children:"Download"}),s.createElement("br",null),"画像読み込み",r.image,"%完了",s.createElement("br",null),"ZIPファイル生成",r.zip,"%完了",s.createElement("hr",null),a.map((({appid:e,name:l,filename:t,actualType:a,expectedType:n,failType:r,allImageUrls:c})=>{const u=h[n],o=a&&h[a];return s.createElement("div",{key:e},"'",l,"'は'",u,"'でのダウンロードを試みましたが",{FALLBACK_FOUND:`ファイルが見つからなかったため代わりに'${o}'をダウンロードしました。`,ALL_NOT_FOUND:"ファイルが見つかりませんでした。"}[r],"必要に応じて下から別サイズの画像をダウンロードしてください。(壊れている画像もダウンロードできますが虚無がダウンロードされます。)",s.createElement("br",null),L(t,c.capsule),L(t,c.header),L(t,c.library),s.createElement("hr",null))})))}const L=(e,l)=>s.createElement("a",{href:e,download:e},s.createElement("img",{src:l,style:{width:"220px"}})),T=o.button``;function A({value:e,allItemCount:l,categoryMap:t,onChange:a}){const n=i.exports.useMemo((()=>{const e=[{value:"",label:`ALL - ${l} items`}];return t.forEach((({length:l},t)=>{e.push({value:t,label:`${t} - ${l} items`})})),e}),[l,t]);return s.createElement(U,null,"カテゴリー:"," ",s.createElement("select",{value:e||"",onChange:e=>{a(e.currentTarget.value||null)}},n.map((({value:e,label:l})=>s.createElement("option",{key:e,value:e,label:l})))))}const U=o.label`
  display: block;
`,_=[{value:"capsule",label:h.capsule},{value:"header",label:h.header},{value:"library",label:h.library},{value:"library-fallback",label:h["library-fallback"]},{value:"header-fallback",label:h["header-fallback"]}];function j({disabled:e,value:l,onChange:t}){return s.createElement(F,null,"画像サイズ:"," ",s.createElement("select",{disabled:e,value:l,onChange:e=>{t(e.currentTarget.value)}},_.map((({value:e,label:l})=>s.createElement("option",{key:e,value:e,label:l})))))}const F=o.label`
  display: block;
`,N=k({parse:e=>{var l,t,a,n,r;try{const c=m.parse(e);return null!=(r=null==(n=null==(a=null==(t=null==(l=null==c?void 0:c.UserRoamingConfigStore)?void 0:l.Software)?void 0:t.Valve)?void 0:a.Steam)?void 0:n.Apps)?r:null}catch(c){return null}},stringify:e=>{const l={UserRoamingConfigStore:{Software:{Valve:{Steam:{Apps:e}}}}};return m.stringify(l)}}),D=k({parse:e=>{try{const l=JSON.parse(e);return Array.isArray(l)?l:null}catch(l){return null}},stringify:JSON.stringify});function I(){const[e,l]=w("apps",{}),[t,a]=w("rg-games",[]),[n,r]=w("fetch-mode","library"),[c,u]=i.exports.useState(null),o=i.exports.useMemo((()=>(e=>{const l=new Map;return Object.entries(e).forEach((([e,{tags:t}])=>{Object.values(t||{}).forEach((t=>{const a=l.get(t)||[];a.push(e),l.set(t,a)}))})),l})(e)),[e]),m=i.exports.useMemo((()=>c?((e,l,t)=>{const a=e.get(l)||[];return a.length?t.filter((({appid:e})=>a.includes(`${e}`))):[]})(o,c,t):[...t]),[c,o,t]);return s.createElement(R,null,s.createElement("h1",null,"Steam Thumbnail Collector"),s.createElement($,null),s.createElement(z,null,s.createElement(N,{defaultValue:e,onData:e=>{l(e)}})),s.createElement(M,null,s.createElement(D,{defaultValue:t,onData:e=>{a(e)}})),s.createElement(P,null,s.createElement(A,{value:c,categoryMap:o,allItemCount:t.length,onChange:e=>{u(e)}}),s.createElement(j,{value:n,onChange:e=>{r(e)}}),s.createElement(C,{fetchMode:n,zipFilename:`${c||"AllGames"}.zip`,games:m})))}const $=()=>s.createElement(s.Fragment,null,s.createElement("h2",null,"0. Steamのデスクトップアプリ上で画像を集めたいゲームをカテゴリにまとめる"),"Steamのデスクトップアプリを開いて、ライブラリタブでいい感じにカテゴリを作る。その際正しくデータを反映させるために、以下の点について注意して作成してください。",s.createElement(V,null,s.createElement("li",null,"新しくカテゴリを作るときに一番最初に割り当てたゲームについて、「他のゲームを1つ割り当てる」→「一度割り当てを解除」→「改めて割り当てる」という手順を取る。"),s.createElement("li",null,"カテゴリの名前を途中で変更しない。"))),z=({children:e})=>s.createElement("div",null,s.createElement("h2",null,"1. ",s.createElement("code",null,"sharedconfig.vdf")," を読み込む"),s.createElement(V,null,s.createElement("li",null,s.createElement("code",null,'"Program Files (x86)"/Steam/userdata/',"{","StaemのユーザーID","}","/7/remote/"),"にある",s.createElement("code",null,"sharedconfig.vdf"),"をメモ帳等で開く。"),s.createElement("li",null,"その中身をすべてコピーしこのテキストボックスに貼り付ける。(すでにあるものを上書きしてください。データはこのページを閉じても保存されますが、最新のデータを使いたいときは改めて同じ手順でデータを貼り付けてください。)")),e),M=({children:e})=>s.createElement("div",null,s.createElement("h2",null,"2. 自分のプロフィールページからゲームのデータを読み込む"),s.createElement(V,null,s.createElement("li",null,"WebブラウザでSteamを開きログインする。(Chrome推奨)"),s.createElement("li",null,"次に自分のプロフィールページに飛び、右側のメニューの中からゲーム一覧を開く。 (自分のプロフィールページのURLの末尾に",s.createElement("code",null,"/games/?tab=all"),"を追加することでも開けます。)"),s.createElement("li",null,s.createElement("code",null,"F12"),"キー（または",s.createElement("code",null,"Ctrl+Alt+I"),"）でブラウザの開発者ツールを開き、開発者ツール内上部のタブ一覧から",s.createElement("code",null,"Console"),"というタブを選択する。"),s.createElement("li",null,s.createElement("a",{href:"https://raw.githubusercontent.com/whatasoda/steam-thumbnail-collector/main/collect-game-data.js"},"このページ"),"にあるスクリプトをコピーして先程開いたコンソールに貼り付ける。"),s.createElement("li",null,"自動的にゲームのデータがクリップボードにコピーされるので、それをこのテキストボックスに貼り付ける。(すでにあるものを上書きしてください。データはこのページを閉じても保存されますが、最新のデータを使いたいときは改めて同じ手順でデータを貼り付けてください。)")),e),P=({children:e})=>s.createElement("div",null,s.createElement("h2",null,"3. カテゴリーと画像サイズを選んで生成&ダウンロード！"),e),R=o.div`
  padding-bottom: 50%;
`,V=o.ol`
  padding-left: 25px;
  code {
    white-space: pre;
    padding: 4px;
    background-color: #ccc;
    border-radius: 4px;
  }
`;p.render(s.createElement(I,null),document.querySelector("#app"));
